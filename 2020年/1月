■1/18土

■1/17金
今日からはアウトプット。
・GitHubを使って学習内容を記録してみる。
解きながら学ぶＣ言語を使用。
第1章
第2章
第3章
・if文は0が偽、0以外が真。真のときにブロック内を実行。これを利用して、余りが出るか出ないかでif文の実行有無を決める式が作れる。実用性は知らん。
・三項演算子…a ? b:c ; aが真のときb、偽のときc。行数減るけど却ってややこしくなる気がするからあんま使わないでおこう・・・
→if文使わずにprintfの中で判定をすることで、プログラムの行数を減らすことができるみたい。
→printf("aとbの小さいほうの値は%dです。",a<b ? a : b) ; 
・switch()には変数ではなく式自体を入れるのもあり。変数宣言をひとつ省けることになる。
第4章（p94まで）
・処理を好きなだけ繰り返せるようにする
    int retry = 0 ;
    do{
      --任意の処理
      do{
		    printf("もう一度実行しますか？【yes...0/no...9】:");
		    scanf("%d",&retry);
      }while (retry != 0 && retry != 9) ; //retryが0でも9でもないなら繰り返す（0か9を入れないと終了も再実行もできなくなる）
    }while (retry == 0 );
   これは色々応用効きそう！
 ・正の整数を受け付けるまでループする
    	do {
		    printf("正の整数を入力：") ; scanf("%d",&num1) ;
		    if(num1<=0){
		 	  printf("正でない数を入力しないでください\n");
		    }
    	}while (num1<=0);
      
・当面は必要になる言語がＣに限られるから、組み込み来て良かったかもしれないなぁ。一つの言語に集中して勉強できる。
・まあ言語はほぼＣだけだけど、必要な知識やスキルは一つじゃないのだが。電子回路とか、ハードウェア周りのことも覚えないといかんからな。
・web系も興味あるけど必要な言語が基本一つじゃないのが大変そう。
　プログラミング経験が浅い段階で複数言語を並行して勉強するのは、俺にはなかなかしんどかったと思われる。
・Ｃの基礎をしっかり固めて、とりあえずまずは現場経験を積むことだな。あとは基本情報の資格取得。学びの柱はこの3つでしばらくは充分だろ。
・web系言語は、今は息抜きで軽く触れてみる程度でいいや。本腰入れてみるのは多少の余裕ができてから。半年後くらい？



■1/16木
・構造体、共用体、列挙型
・ファイル入出力
→fopen()、fclose()。オープンモードが多数。
・標準ライブラリ
・プリプロセッサ
・ビットフィールド
・makefile
Ｃ言語基礎知識のインプットはここまで。

■1/1～1/15水
・テクノプロ入社
・C言語の基礎知識学習研修

