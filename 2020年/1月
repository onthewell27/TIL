【要復習箇所】概要は大丈夫だけど、細かいところまでの理解がまだ不十分。時間を作って「解きながら学ぶ」で練習しよう。写経でもOK。
・文字列と配列
・ポインタ
・ビット演算
■visual studio codeにおける　ビルド→「gcc ファイル名.c」実行「ファイル名.exe」 

-----テンプレート-----
【/】
■
・
・
・
■
■
■
---------------------
■
■

【1/25日】
■
・
・
・
■
■
■Linux仮想環境構築
---------------------
■
■


【1/25土】Day46 (225h)
■FE計算問題4問
■ウズカレ 5_03（動画）5_04（動画）5_05（pdf）
■『C言語スタートブック』第1章 

■FEアルゴリズム
・過去問1年分
・テキスト2章分くらい
■FE言語過去問（余裕あれば）
---------------------
■ウズカレ卒業後に放置してたwebアプリ編を再開。してみたが、案の定過去の学習内容が頭からほとんど抜け落ちていた。
 これからの実務とは方向性が全く異なる分野と思われるので、一旦ここまでで寝かせることにしよう。
 この後の動画は、ここまでをしっかり理解していないと時間の無駄になってしまうと思うし。たとえ流し見であっても、何も頭に残らないなら意味は無い。
 どうしても気になるなら、pdfの資料だけ読んでみましょ。あとこれ以上の同時並行学習は普通にキャパオーバーするｗ
 いつか勉強キャパに余裕が出てきたり、web開発に関わるようになったら、また1から復習してこう。
■


【1/24金】
終日自習：CAN通信のテキスト流し読み→組み込み制御のテキスト読んで復習→CAN通信テキストを実機いじりつつやってみる
■資格について軽くリサーチしつつ、e-learningのページの使い方確認。ETEC受けたいね。
■CAN通信
・テキスト3周流し読み。2章までは4週目の平読みも実施済み。
・2章CANプログラムの実行。
■組み込み開発テキスト復習。
■e-ラーニング
・三分で得する講座「ユニバーサルサービス」「パリ協定」「健康経営」「海洋プラスチックゴミ」
・ETEC資格対策第1章　MPUとか
■業界研究：インフラエンジニア
■VS code動作思い出し
■ウズカレ　java05-03　資料読み
---------------------
■組み込み開発のテキストの方の理解が体感5割くらいなので、正直CAN通信に行くのは早い気がする。先生スピードがなかなか速いっす…ｗ
■なんならC言語の基礎すら心配です。家で復習するしかねーかな。
■一回テキストに書かれてるプログラムをとりあえず通しで書いて動かして（昨日まで）、その上で再度テキストをはじめから読んでみてるんだけど、
 なかなか理解が進む。「あーアレはそういうことだったのね」って感じ。
■何かソースコード書いてあったりするテキストは、原理は一旦気にせずにまず書いて動かしてみて、その後テキスト読む感じでもいいかもしれないね。
■15時ごろになると集中力が持たんな～。眠たくはないんだけど、テキストの内容が頭に入ってこねぇ。
■ETEC、まだ最初の章だけど、「この用語知っとるで！分かる！」っていうのがちょくちょくあって嬉しい。IPとFEの勉強で得た知識だな。
 どの勉強も、そこそこの頻度で別の場所で絡んでくるものなんだなぁ。楽しいぞこの業界。
■細かい裏側の話は分からんが、とりあえず2台のArduinoでCAN通信して、ボタン押したら相方のLEDが点くようにできた。


【1/23木】
■STM32のLCD表示
・ONにするセグメントをビットで指定するやり方→こんなんやってられるか！ｗｗ
・LCD表示をライブラリ化して表示→ビット演算でどうにかしてるってことは分かったが、
 　演算式の中身までは理解できず。いずれ分かるかもしれない…。
■バブルソートをＣ言語で再現（フローチャートも作成）
■Arduino
・LCDの表示
・カウントダウンタイマーの作成
---------------------
■Arduino、演習問題はきついかも。前章までを振り返りつつ、必要な処理とかを細分化していけばいけるかな…？
　とりあえず写経しただけでしかないから、、いざ課題を投げられるとどういう風にコード書けばいいかわからん。


■1/22水
・Arduino を動かしてみよう（p78～p129）
 ・ボタン押してLED点灯
 ・LED点滅
 ・タイマー利用割り込みを利用したLED点滅
 ・GPIO（汎用入出力）によるボタン処理→ボタンをタッチパネルに変更
 ・ボタン入力割り込みを利用したLED点滅
 ・ボタンを押して音を鳴らす。
 ・ボタン入力割り込みを利用した音鳴らし。一度押したら、再度押すまで鳴り続ける。
 ・音再生関数を利用して任意の音量の音を流す。
 ・A/D変換を使う。（回転角センサを利用して音量、もしくは音域の調整）
 ・PCへのデータ送信。
 ・PCからのデータ送信。（LEDライトの）
--------------------------
・さすが、難しいところをユーザーに隠してるだけあって、Arduinoはやることが分かりやすいな。コードが読みやすい。
・とはいえ全く知識定着してない。やったそばから抜けてってる感。今日帰ったらテキスト読み返そう。
・16時くらいから集中力が…。1時間に1回くらいの頻度で席立って、軽く体ほぐしに行ったりしてたんだけど、限界だなー。
　特に眠気がやべぇ。完全にここ2,3日の夜更かしが祟ってるだろこれは。

■1/21火
もし自習時間が与えらたら・・・
（・「解きながら学ぶ」のポインタ）
（・「アルゴリズムが解けるようになる」の読み進め）
・マイコンいじり(STM32)：LEDランプの点灯、消灯/タイマー割り込み/ボタン割り込み/LCD表示
-------↑やったこと/↓気分とか思ったこと、残したいソースコード
・結構しょうもないスペルミス（タイプミス）をする。forがfotになってるとか、uintがunitとか。stdioをstudioに書き間違えるのを笑ってられないなぁｗ
　すぐ気づけるからいいんだけど、もしエラー警告出してくれないエディタ使ってたら見つかるまでえらい時間かかりそう…。
・先に書いた部分を流用コピペしてコーディングしてるときに、変数名を書き換え忘れて理想動作しないパターンやった。
　書き換えられてるって思い込み入るから、見返してもかなり気付きにくいな…ｗ
・割り込み関係は要復習。1度じゃ覚えられん。
・LCD表示のところに入っていきなり初見の専門用語の嵐でヤバい。ファルシのルシがコクーンでパージ状態。
・LCDに限らず、全体的に言われるがままとりあえずやっただけって感じだなぁ。Javaの始めたての方がもうちょっと理解できてたと思うが。
・ぶっちゃけこの教材分かりにくくねーかｗ


■1/20月
・通勤時間に業界研究（ネットサーフィンで主にSESについての記事を転々と。）
・テスト：7、8、9、13章
・「アルゴリズムをはじめよう」クイックソート、エラトステネスのふるい
・FE R1 A アルゴリズム　（Bitap法による文字列検索）正答率3/9。解説で7割くらい理解できた。
・「解きながら学ぶ」写経（「7章：基本形」「8章：いろいろなプログラム」から1～2個）
・エラトステネスのふるいをC言語で再現チャレンジ→未了
-------↑やったこと/↓気分とか思ったこと、残したいソースコード
・今後。自分で買ったC言語入門を読んで、文法面の基礎事項を再度復習しよう。なんか色々ガバガバな気がするぞ。
　「解きながら学ぶ」も一応各知識の解説あるからこっちで復習してもいいんだけど、若干読みづらい・・・。こちらははあくまで問題集とか写経用として使うべきか。
・ソースコードを読むときや、写経するときは、main関数から始めよう。main()の読み書きが一番下まで行ったら、間で呼ばれていた関数の読み書きを始める。
　コンパイラよろしく上から順番に読んでくと、main()の中に書かれてる処理の大枠が分からないままサブ関数を見ることになるので
　ソースコード全体を把握しづらくなる。何のために使う関数で、何を引数としてもらってるのかが意味不明で頭が混乱し、そのままコード全体の理解もできなくなった。

・「char型の値」とか「char型のビット」って表現で　あたまが　こんらんした！▼　ので、以下に調べて理解できた内容をまとめる。
/*受け取ったunsigned char型の値を構成するビットのうち、0であるビットの個数を求めて返却する関数*/
#include <stdio.h>
#include <limits.h>
int count0bits(unsigned char x){
	int i ;
	int bits = 0 ;

	for(i=0;i<CHAR_BIT;i++){
		if((x&1)==0){
			bits ++ ;
		}
		x >>= 1;
	}
	return bits ;

}

int main(void){

	setvbuf(stdout,NULL,_IONBF,0);

	printf("count0bits(d)=%d",count0bits('d'));

	return 0 ;
}

//「d」はアスキー文字コード上（16進数）では、「64」。10進数に直すと「100」
//「100」を二進数に直すと「01100100」。その中の0のビットの個数を求めている。
//「d」は「64」であり「100」であり「01100100」なのだ。（ASCII文字コードにおいて。）
//つまり、「char型文字のビットの中で0の数を求める」というのは、
//「そのchar型文字の文字コード上での値を2進数に直し、その2進数の中で0であるビットの数を求める」
//ということなのであるらしい。char型なのに値とは・・・？って混乱してたけど、文字型の値ってのは基本的に文字コード上の値ってことでいいのかな。
//そんでその値は「singned char」型の変数は-128~127、「unsigned char」型の変数は0~255だと。
・ちなみに、char型変数を%dでprintfすると10進数での文字コードが、%0xでprintfすると16進数での文字コードが出力される！


■1/19日
・今日以降過去問演習やるなら、午後のアルゴリズムと言語だけやる。その他の午後問題はやる気があれば。
　言語はCとJava両方やってみよう。午前は通勤中の過去問道場で。
・FE AM計算問題
・FE AM過去問道場
・「アルゴリズムを始めよう」　単純挿入法
・「解きながら学ぶ」　7章4ページ、10章04写経
-------↑やったこと/↓気分とか思ったこと、残したいソースコード
・休日に根詰め過ぎは良くないと思います（断言）
・外出もしてた日にしては十分やったろこれ。欲を言えば「解きながら～」はガンガン進めたかったけど、
　結局テスト用の勉強になってしまうし、やれなかったけどまあいいか。
　知識としてはなんとか理解できてるんだけど、この問題集の設問、ロジックがちょっと複雑な気がする・・・（笑）
　4章以降は設問1からじっくりコードを理解していこうとしないと、俺には章後半の設問はちょっと難易度が高いっすわ。飛ばし読みでは対応できん。
 

■1/18土
・通勤中にFE過去問道場数問
・ざっと問題集一周　→　4章以降の錬成問題を後ろから順に実施（ただのテスト対策）
・FE H30A 午後C言語（鉄道シミュレータ）…7問中6問正解。
・テスト…1章～6章
---------------------------------------
・眠い。疲れもたまっている。そして寒い。
・午前中で復習終わりで、午後に確認テストだって。来週だと思ってたのに！
・仕方がないので、全問丁寧に解いてくのは止め。
・各章の解説部分をざっくり読みつつ、錬成問題を飛ばし飛ばし見ていく方針に変更。

・文字列の比較が少しややこしいな。
　strcmp関数について
   比較は文字コードの数値によって行われる！
   char str1 ;
   char str2 ;
 　strcmp(str1,str2) ;
   str1=str2 であれば0を返す
   str1>str2であれば（文字コード数値でstr1の方が大きい、つまり後に存在している場合）正の値を返す
   str1<str2であれば（文字コード数値でstr2の方が大きい場合）負の値を返す
   
   これを利用して、char str[] ;の中の文字列要素の比較をし、昇順ソートの実行是非を判断。
   strcmp(str[0],str[1]);
   結果が正ならばstr[0]の方が数値が大きい（配列中ではstr[0]より後にいるstr[1]が、文字コード上ではstr[0]よりも前に来る）ことになるので、
   str[]の要素を昇順にソートしたい場合はソートを実行することになる。
   
・とりあえずざっと問題集1周して、そのあとに全問丁寧に見ていくことにしようか？
・集中力が枯渇しかけてる・・・。（15：00現在）
・息抜き：FE H30A 午後C言語（鉄道シミュレータ）…7問中6問正解。
　意外とプログラム読めた。問題テーマがイメージしやすかったお陰もあるかな。慣れれば読解速度も上がるかなー。
  ざっと問題文と選択肢を流し読んで、問題の概要を掴む。→　問題文、プログラムの細部まで見て、問いに答えていく。
・眠い。マジで。集中力切れ。

   

■1/17金
今日からはアウトプット。
・GitHubを使って学習内容を記録してみる。
解きながら学ぶＣ言語を使用。
第1章
第2章
第3章
・if文は0が偽、0以外が真。真のときにブロック内を実行。これを利用して、余りが出るか出ないかでif文の実行有無を決める式が作れる。実用性は知らん。
・三項演算子…a ? b:c ; aが真のときb、偽のときc。行数減るけど却ってややこしくなる気がするからあんま使わないでおこう・・・
→if文使わずにprintfの中で判定をすることで、プログラムの行数を減らすことができるみたい。
→printf("aとbの小さいほうの値は%dです。",a<b ? a : b) ; 
・switch()には変数ではなく式自体を入れるのもあり。変数宣言をひとつ省けることになる。
第4章（p94まで）
・処理を好きなだけ繰り返せるようにする
    int retry = 0 ;
    do{
      --任意の処理
      do{
		    printf("もう一度実行しますか？【yes...0/no...9】:");
		    scanf("%d",&retry);
      }while (retry != 0 && retry != 9) ; //retryが0でも9でもないなら繰り返す（0か9を入れないと終了も再実行もできなくなる）
    }while (retry == 0 );
   これは色々応用効きそう！
 ・正の整数を受け付けるまでループする
    	do {
		    printf("正の整数を入力：") ; scanf("%d",&num1) ;
		    if(num1<=0){
		 	  printf("正でない数を入力しないでください\n");
		    }
    	}while (num1<=0);
      
・当面は必要になる言語がＣに限られるから、組み込み来て良かったかもしれないなぁ。一つの言語に集中して勉強できる。
・まあ言語はほぼＣだけだけど、必要な知識やスキルは一つじゃないのだが。電子回路とか、ハードウェア周りのことも覚えないといかんからな。
・web系も興味あるけど必要な言語が基本一つじゃないのが大変そう。
　プログラミング経験が浅い段階で複数言語を並行して勉強するのは、俺にはなかなかしんどかったと思われる。
・Ｃの基礎をしっかり固めて、とりあえずまずは現場経験を積むことだな。あとは基本情報の資格取得。学びの柱はこの3つでしばらくは充分だろ。
・web系言語は、今は息抜きで軽く触れてみる程度でいいや。本腰入れてみるのは多少の余裕ができてから。半年後くらい？



■1/16木
・構造体、共用体、列挙型
・ファイル入出力
→fopen()、fclose()。オープンモードが多数。
・標準ライブラリ
・プリプロセッサ
・ビットフィールド
・makefile
Ｃ言語基礎知識のインプットはここまで。

■1/1～1/15水
・テクノプロ入社
・C言語の基礎知識学習研修

